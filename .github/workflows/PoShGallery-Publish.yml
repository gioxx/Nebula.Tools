name: Publish to PowerShell Gallery

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  publish:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Validate module manifest
        shell: pwsh
        run: |
          $psd1Path = Join-Path $PWD 'Nebula.Tools.psd1'
          Test-ModuleManifest -Path $psd1Path -Verbose

      - name: Prepare module package
        shell: pwsh
        run: |
          $outDir = Join-Path $PWD 'build'
          $moduleName = 'Nebula.Tools'
          $moduleDir = Join-Path $outDir $moduleName

          if (Test-Path $outDir) { Remove-Item -Recurse -Force $outDir }
          New-Item -ItemType Directory -Path $moduleDir -Force | Out-Null

          # Copy main files
          $includeFiles = @("$moduleName.psd1", "$moduleName.psm1", "README.md", "icon.png")
          foreach ($file in $includeFiles) {
            if (Test-Path $file) {
              Copy-Item -Path $file -Destination $moduleDir -Force
            }
          }

          # Copy modules folder if it exists
          $sourceModules = Join-Path $PWD 'modules'
          if (Test-Path $sourceModules) {
            Copy-Item -Path $sourceModules -Destination (Join-Path $moduleDir 'modules') -Recurse -Force
          }

      - name: Publish module to PowerShell Gallery
        shell: pwsh
        run: |
          $modulePath = Join-Path $PWD 'build' | Join-Path -ChildPath 'Nebula.Tools'

          if (-not (Get-PSRepository -Name 'PSGallery' -ErrorAction SilentlyContinue)) {
              Register-PSRepository -Name 'PSGallery' -SourceLocation 'https://www.powershellgallery.com/api/v2' -InstallationPolicy Trusted
          }

          Publish-Module -Path $modulePath `
                         -NuGetApiKey "${{ secrets.NUGET_API_KEY }}" `
                         -Verbose
